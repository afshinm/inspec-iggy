#
# Author:: Matt Ray (<matt@chef.io>)
#
# Copyright:: 2018, Chef Software, Inc <legal@chef.io>
#

require "iggy"

require "inspec"

module Iggy
  class Inspec

    # constants for the InSpec resources
    RESOURCES = ::Inspec::Resource.registry.keys

    # resource: aws_security_group
    # properties: description, group_id, group_name, inbound_rules, outbound_rules, vpc_id
    # there really should be some way to get this directly from InSpec's resources
    def self.resource_properties(resource)
      # remove the common methods, in theory only leaving only unique InSpec properties
      inspec_properties = ::Inspec::Resource.registry[resource].instance_methods - COMMON_PROPERTIES
      # get InSpec properties by method names
      inspec_properties.collect! { |x| x.to_s }
      Iggy::Log.debug "Inspec.resource_properties #{resource} properties = #{inspec_properties}"

      inspec_properties
    end

    def self.print_controls(file, generated_controls)
      puts "# encoding: utf-8\n#"

      puts "\ntitle '#{File.absolute_path(file)} controls generated by Iggy v#{Iggy::VERSION}'"

      generated_controls.keys.each do |id|
        control = generated_controls[id]

        puts "\ncontrol '" + control["name"] + "' do"
        puts "  title '" + control["title"] + "'"
        puts "  desc '" + control["desc"] + "'"
        puts "  impact " + control["impact"]
        puts "  describe " + control["resource"] + "('" + control["parameter"] + "') do"
        control["tests"].each do |test|
          puts "    #{test}"
        end
        puts "  end"
        puts "end"
      end
    end

    private
    # a hack for sure, finds common methods as proxy for InSpec properties
    COMMON_PROPERTIES = ::Inspec::Resource.registry['aws_subnet'].instance_methods &
      ::Inspec::Resource.registry['directory'].instance_methods
  end
end
