#
# Author:: Matt Ray (<matt@chef.io>)
#
# Copyright:: 2018, Chef Software, Inc <legal@chef.io>
#

require "iggy"

require "inspec"

module Iggy
  class Inspec

    # constants for the InSpec resources
    RESOURCES = ::Inspec::Resource.registry.keys
    # @common_resources = []
    # COMMON_RESOURCES = @common_resources

    # def initialize
    #   resources = ::Inspec::Resource.registry[RESOURCES[0]].instance_methods
    #   RESOURCES.each do |ir|
    #     @common_resources = resources & Inspec::Resource.registry[ir].instance_methods
    #   end
    # end
    # # RESOURCES = resources_init()
    # # PROPERTIES = properties_init()

    # def self.properties(resource)
    #   Inspec::Resource.registry[resource].instance_methods - COMMON_RESOURCES
    # end

    def self.print_controls(file, generated_controls)
      puts "# encoding: utf-8\n#"

      puts "\ntitle '#{File.absolute_path(file)} controls generated by Iggy v#{Iggy::VERSION}'"

      generated_controls.keys.each do |id|
        control = generated_controls[id]

        puts "\ncontrol '" + control["name"] + "' do"
        puts "  title '" + control["title"] + "'"
        puts "  desc '" + control["desc"] + "'"
        puts "  impact " + control["impact"]
        puts "  describe " + control["resource"] + "('" + control["parameter"] + "') do"
        control["tests"].each do |test|
          puts "    #{test}"
        end
        puts "  end"
        puts "end"
      end
    end

    # private
    # def resources_init()
    #   Inspec::Resource.registry.keys
    # end

    # def properties_init()
    # end

  end
end
